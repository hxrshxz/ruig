{"version":3,"file":"cacher.js","mappings":"mBACA,MAAMA,EAAoB,kBACpBC,EAAc,CAChB,IACA,cACA,iBACA,gBAGJC,KAAKC,iBAAiB,WAAYC,IAC9BA,EAAMC,UAAUC,OACXC,KAAKP,GACLQ,MAAMC,GAAUA,EAAMC,OAAOT,KAC7BU,OAAOC,GAAUC,QAAQD,MAAM,6BAA8BA,KAAQ,IAE9EV,KAAKC,iBAAiB,SAAUC,IAC5BA,EAAMU,YAAYR,OAAOS,MAAMX,EAAMY,SAASR,MAAMS,GAC5CA,GAGGC,MAAMd,EAAMY,SACdR,MAAMW,IACP,IAAKA,GAA0C,MAAzBA,EAAcC,QAAyC,UAAvBD,EAAcE,KAChE,OAAOF,EAEX,MAAMG,EAAiBH,EAAcI,QAKrC,OAJAjB,OACKC,KAAKP,GACLQ,MAAMC,GAAUA,EAAMe,IAAIpB,EAAMY,QAASM,KACzCX,OAAOC,GAAUC,QAAQD,MAAM,0BAA2BA,KACxDO,CAAa,IAEnBR,OAAOC,IACRC,QAAQD,MAAM,gBAAiBA,EAAM,MAG1C,IAEPV,KAAKC,iBAAiB,YAAaC,IAC/BA,EAAMC,UAAUC,OAAOmB,OAAOjB,MAAMkB,GACzBC,QAAQC,IAAIF,EACdG,QAAQC,GACFA,EAAUC,WAAW,kBAAoBD,IAAc9B,IAE7DgC,KAAKF,GACCxB,OAAO2B,OAAOH,QAE1B,G","sources":["webpack://ruig/./src/workers/cacher.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst CACHER_CACHE_NAME = 'cacher-cache-v1';\nconst urlsToCache = [\n    '/',\n    '/index.html',\n    '/manifest.json',\n    '/favicon.ico',\n    // Add other assets to cache here\n];\nself.addEventListener('install', (event) => {\n    event.waitUntil(caches\n        .open(CACHER_CACHE_NAME)\n        .then((cache) => cache.addAll(urlsToCache))\n        .catch((error) => console.error('Cache installation failed:', error)));\n});\nself.addEventListener('fetch', (event) => {\n    event.respondWith(caches.match(event.request).then((response) => {\n        if (response) {\n            return response;\n        }\n        return fetch(event.request)\n            .then((fetchResponse) => {\n            if (!fetchResponse || fetchResponse.status !== 200 || fetchResponse.type !== 'basic') {\n                return fetchResponse;\n            }\n            const clonedResponse = fetchResponse.clone();\n            caches\n                .open(CACHER_CACHE_NAME)\n                .then((cache) => cache.put(event.request, clonedResponse))\n                .catch((error) => console.error('Error caching response:', error));\n            return fetchResponse;\n        })\n            .catch((error) => {\n            console.error('Fetch failed:', error);\n            // Optionally, return a fallback response here\n        });\n    }));\n});\nself.addEventListener('activate', (event) => {\n    event.waitUntil(caches.keys().then((cacheNames) => {\n        return Promise.all(cacheNames\n            .filter((cacheName) => {\n            return cacheName.startsWith('cacher-cache-') && cacheName !== CACHER_CACHE_NAME;\n        })\n            .map((cacheName) => {\n            return caches.delete(cacheName);\n        }));\n    }));\n});\nexport {};\n"],"names":["CACHER_CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","catch","error","console","respondWith","match","request","response","fetch","fetchResponse","status","type","clonedResponse","clone","put","keys","cacheNames","Promise","all","filter","cacheName","startsWith","map","delete"],"sourceRoot":""}